---
const firstColumn = ['27.avif', '26.avif', '25.avif', '1.avif'];
const secondColumn = ['24.avif', '23.avif', '22.avif', '21.avif', '4.avif'];
const thirdColumn = ['20.avif', '1.avif', '2.avif', '3.avif'];

const columns = [firstColumn, secondColumn, thirdColumn];
---

<section class="section section--columns">
  <div class="columns">
    {
      columns.map((column) => (
        <div class="column-wrap">
          <div class="column">
            {column.map((image) => (
              <div class="column__item">
                <div class="column__item-img" style={`background-image:url(/img/${image})`} />
              </div>
            ))}
          </div>
        </div>
      ))
    }
  </div>
</section>

<script>
  import Lenis from '@studio-freight/lenis';
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';
  gsap.registerPlugin(ScrollTrigger);

  const getDOM = () => ({
    sections: {
      columns: document.querySelector('.section--columns'),
      showcase: document.querySelector('.section--showcase'),
    },
    columns: document.querySelectorAll('.section--columns > .columns'),
    columnWraps: document.querySelectorAll('.section--columns .column-wrap'),
    itemsWrappers: document.querySelectorAll('.section--columns .column-wrap .column'),
    items: document.querySelectorAll('.section--columns .column__item'),
    images: document.querySelectorAll('.section--columns .column__item-img'),
  });

  const initSmoothScrolling = () => {
    const lenis = new Lenis({
      lerp: 0.2,
      smoothWheel: true,
    });
    const scrollFn = (time: number) => {
      lenis.raf(time);
      requestAnimationFrame(scrollFn);
    };
    requestAnimationFrame(scrollFn);
  };

  const scroll = () => {
    const DOM = getDOM();

    gsap
      .timeline({
        scrollTrigger: {
          start: 0,
          end: 'max',
          scrub: true,
        },
      })
      .addLabel('start', 0)
      .to(
        DOM.sections.columns,
        {
          ease: 'none',
          startAt: { scale: 0.8 },
          scale: 1,
        },
        'start'
      )
      .to(
        DOM.items,
        {
          scrollTrigger: {
            trigger: DOM.sections.showcase,
            start: 0,
            end: 'top top',
            scrub: true,
          },
          ease: 'power4.inOut',
          startAt: {
            filter: 'grayscale(100%)',
          },
          filter: 'grayscale(0%) ',
          // repeat once (go back to "startAt" values)
          yoyo: true,
          repeat: 1,
        },
        'start'
      )
      .to(
        DOM.columnWraps,
        {
          ease: 'none',
          yPercent: (pos) => (pos % 2 ? 10 : -10),
        },
        'start'
      )
      .to(
        DOM.images,
        {
          ease: 'none',
          scale: 3,
        },
        'start'
      );
  };

  initSmoothScrolling();
  scroll();
</script>

<style>
  .section {
    line-height: 1;
    position: static;
    top: 0;
    left: 0;
    z-index: 4;
    width: 100%;
    min-height: 100vh;
    min-height: 100dvh;
    background: var(--color-bg);
  }

  .section--columns {
    position: fixed;
    inset: 0;
    z-index: -1;
    width: 100%;
    height: 100vh;
  }

  .columns {
    width: 100%;
    position: relative;
    display: flex;
    justify-content: var(--justify);
    gap: var(--gap);
    height: 100%;
    transform: rotate(var(--rotation));
    align-items: center;
    will-change: transform, opacity;
  }

  .column-wrap {
    position: relative;
    z-index: 1;
    display: flex;
    flex-direction: column;
    padding: 5vh 0 15vh;
    will-change: transform;
  }

  .column-wrap:nth-child(even) {
    margin-top: var(--offset);
  }

  .column {
    position: relative;
    display: block;
    will-change: transform;
  }

  .column__item {
    --grid-item-height: calc(var(--grid-item-width) * var(--ratio));
    width: var(--grid-item-width);
    height: var(--grid-item-height);
    position: relative;
    overflow: hidden;
    border-radius: var(--radius);
    cursor: pointer;
    margin: 0 0 var(--gap) 0;
    z-index: 1;
    will-change: transform, filter;
  }

  .column__item-img {
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: 50% 50%;
    will-change: transform;
  }

  @media screen and (min-width: 53em) {
    .section {
      font-size: 1.45rem;
    }
  }
</style>
